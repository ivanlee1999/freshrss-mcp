[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "freshrss-mcp"
version = "0.1.0"
description = "A Model Context Protocol server for FreshRSS RSS reader"
readme = "README.md"
license = "MIT"
authors = [
    {name = "FreshRSS MCP Contributors"},
]
keywords = ["mcp", "freshrss", "rss", "feed-reader", "model-context-protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
freshrss-mcp = "freshrss_mcp.server:main"

[project.urls]
Homepage = "https://github.com/yourusername/freshrss-mcp"
Repository = "https://github.com/yourusername/freshrss-mcp"
Issues = "https://github.com/yourusername/freshrss-mcp/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/freshrss_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",   # pylint
    "TRY",  # tryceratops
    "RUF",  # ruff-specific rules
]
ignore = [
    "PLR0913",  # Too many arguments
    "PLR2004",  # Magic value used in comparison
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests